<!-- 날씨정보 가져오는 로직과 함수가 담긴 파일입니다. -->
<!DOCTYPE html>
<html>

<head>
    <title>weather api- 위치로 날씨정보 받아오는용</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script>
        function getLocation() {
            if (navigator.geolocation) {
                console.log('geolocation');
                navigator.geolocation.getCurrentPosition(locationSuccess, locationError);
            } else {
                console.log("지오 로케이션 없음")
            }
        };


        async function locationSuccess(p) {
            var latitude = p.coords.latitude, longitude = p.coords.longitude;
            console.log(latitude, longitude);

            // 사용자 위경도 전송
            await axios({
                method: 'post',
                url: "//localhost:8000/weather/getlocation",
                data: {
                    latitude: latitude,
                    longitude: longitude
                }
            }).then(async function (response) {
                // 날씨정보 JSON파일로 받기 ( 팀노션 - API관리 참고 )
                // 한시간당 12항목 (numOfRows = 12) 받을 수 있습니다 
                // response.data 가공해서 쓰세요
                /* -배열안에 들어가는 데이터 명시-
                baseDate : 발표시각의 날짜
                baseTime : 발표시각의 시분
                category : 데이터 종류
                fcstDate : 예보시각의 날짜
                fcstTime : 예보시각의 시분
                fcstValue : 예보 값
                nx, ny : 기상청 지역코드 
                **/

                console.log('날씨정보 확인');
                console.log(response.data);
                console.log("hours : ", hours);

                let num = 254 + (hours * 12);
                let currentTMP = "";
                if (response.data.item[num].category == "TMP") { currentTMP = response.data.item[num].fcstValue }
                else if (response.data.item[num + 1].category == "TMP") { currentTMP = response.data.item[num + 1].fcstValue }
                else if (response.data.item[num + 2].category == "TMP") { currentTMP = response.data.item[num + 2].fcstValue };
                console.log("current : ", currentTMP);

                let TMN = "";
                let num2 = 338;
                if (response.data.item[num2].category == "TMN") { TMN = response.data.item[num2].fcstValue }
                else if (response.data.item[num2 - 290].category == "TMN") { TMN = response.data.item[num2 - 290].fcstValue }
                console.log("일최저온도 : ", TMN);

                let TMX = "";
                let num3 = 447;
                if (response.data.item[num3].category == "TMX") { TMX = response.data.item[num3].fcstValue }
                else if (response.data.item[num3 - 290].category == "TMX") { TMX = response.data.item[num3 - 290].fcstValue }
                console.log("일최고온도 : ", TMX);

                let REH = "";
                let num4 = 264 + (hours * 12);
                if (response.data.item[num4].category == "REH") { REH = response.data.item[num4].fcstValue }
                else if (response.data.item[num4 + 1].category == "REH") { REH = response.data.item[num4 + 1].fcstValue }
                else if (response.data.item[num4 + 2].category == "REH") { REH = response.data.item[num4 + 2].fcstValue };
                console.log("습도 : ", REH);

                let SKY = "";
                let num5 = 259 + (hours * 12);
                if (response.data.item[num5].category == "SKY") { SKY = response.data.item[num5].fcstValue }
                else if (response.data.item[num5 + 1].category == "SKY") { SKY = response.data.item[num5 + 1].fcstValue }
                else if (response.data.item[num5 + 2].category == "SKY") { SKY = response.data.item[num5 + 2].fcstValue };
                console.log("맑음or 흐림 : ",SKY)

                let PTY = "";
                let num6 = 260 + (hours * 12);
                if (response.data.item[num6].category == "PTY") { PTY = response.data.item[num6].fcstValue }
                else if (response.data.item[num6 + 1].category == "PTY") { PTY = response.data.item[num6 + 1].fcstValue }
                else if (response.data.item[num6 + 2].category == "PTY") { PTY = response.data.item[num6 + 2].fcstValue };
                console.log("비 or 눈 : ",PTY)
                //현재 시간의 기온,습도,최저/고온도 하늘상태 가져오기

                var iconnum = null;
                if (PTY == "0") {
                    if (SKY == "1") {
                        console.log("맑음");
                        iconnum = 1;

                    } else if (SKY == "2") {
                        console.log("구름조금");
                        iconnum = 2;

                    } else if (SKY == "3") {
                        console.log("구름많음");
                        iconnum = 3;

                    } else if (SKY == "4") {
                        console.log("흐림");
                        iconnum = 4;

                    }
                } else if (PTY == "1") {
                    console.log("비");
                    iconnum = 5;

                } else if (PTY == "2") {
                    console.log("비/눈");
                    iconnum = 6;

                } else if (PTY == "3") {
                    console.log("눈");
                    iconnum = 7;

                } else if (PTY == "5") {
                    console.log("빗방울");
                    iconnum = 8;

                } else if (PTY == "6") {
                    console.log("빗방울눈날림");
                    iconnum = 9;

                } else if (PTY == "7") {
                    console.log("눈날림");
                    iconnum = 10;
                }

                var A = document.getElementById("icon");
                A.innerHTML = `<img src="image/weathericon/${iconnum}.png">`;
                var B = document.getElementById('temp');
                B.innerHTML = `현재기온 : ${currentTMP}`;
                var C = document.getElementById('lowtemp');
                C.innerHTML = `최저온도 : ${TMN}`;
                var D = document.getElementById('hightemp');
                D.innerHTML = `최고온도 : ${TMX}`;
                var E = document.getElementById('humidity');
                E.innerHTML = `습도 : ${REH}`;
                
                /*
                - 하늘상태(SKY) 코드 : 맑음(1), 구름많음(3), 흐림(4)
                - 강수형태(PTY) 코드 : (초단기) 없음(0), 비(1), 비/눈(2), 눈(3), 빗방울(5), 빗방울눈날림(6), 눈날림(7) 
                -iconnum : 1 - 맑음 / 2 - 구름조금 / 3 - 구름많음 / 4 - 흐림 / 5- - 비 / 6 - 비or눈 / 7 - 눈 / 8 - 빗방울 / 9 - 빗방울눈날림 / 10 - 눈날림
                **/
                for (var i = 0; i<12; i++) {
                    grpTMP = null;
                    num7 = 254 + (hours * 12) + (i*12)
                    if (response.data.item[num7].category == "TMP") { grpTMP = response.data.item[num7].fcstValue }
                    else if (response.data.item[num7 + 1].category == "TMP") { grpTMP = response.data.item[num7 + 1].fcstValue }
                    else if (response.data.item[num7 + 2].category == "TMP") { grpTMP = response.data.item[num7 + 2].fcstValue }
                    else if (response.data.item[num7 + 3].category == "TMP") { grpTMP = response.data.item[num7 + 3].fcstValue }
                    else if (response.data.item[num7 + 4].category == "TMP") { grpTMP = response.data.item[num7 + 4].fcstValue }
                    else if (response.data.item[num7 + 5].category == "TMP") { grpTMP = response.data.item[num7 + 5].fcstValue }
                    else if (response.data.item[num7 + 6].category == "TMP") { grpTMP = response.data.item[num7 + 6].fcstValue }
                    let grp = document.getElementById("graph");
                    console.log(grpTMP);
                    
                    }
                // for (num7 = 254 + (hours * 12); num7 < 544; num7+12 ) {
                // currentTMP = null;
                // if (response.data.item[num7].category == "TMP") { currentTMP = response.data.item[num7].fcstValue }
                // else if (response.data.item[num7 + 1].category == "TMP") { currentTMP = response.data.item[num7 + 1].fcstValue }
                // else if (response.data.item[num7 + 2].category == "TMP") { currentTMP = response.data.item[num7 + 2].fcstValue };
                // let grp = document.getElementById("graph");
                // grp.innerText = `${currentTMP}`
                // }
                //그래프


            });
        }; //get location

        function locationError(error) {
            var errorTypes = {
                0: "알 수 없는 에러",
                1: "허용 안눌렀음",
                2: "위치가 안잡힘",
                3: "응답시간 지남"
            };
            var errorMsg = errorTypes[error.code];
            console.log(errorMsg)

        }   // locationError

        window.onload = function() 
        {getLocation(); timereset();}
         // 페이지로드하자마자 실행함수!!

        
         //시간

        

        
    </script>

  

</head>

<body>
    <div class="weather">
        <button type="button" onclick="getLocation();">현재위치 가져오기</button>
        <!-- <button type="button" onclick="reloadDivArea();">새로고침</button> -->
        <div id="icon"></div>
        <div id="time">현재시간 : </div>
        <div id="temp">현재온도 : </div>
        <div id="lowtemp">일최저기온 : </div>
        <div id="hightemp">일최고기온 : </div>
        <div id="humidity">습도 : </div>
    </div>
    <div>
        <div id="graph"> </div> 
    </div>

    <script>
        var date = new Date();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var time = document.getElementById("time")
        function timereset(){
        time.innerHTML = `현재시간 : ${month}월 ${day}일 ${hours}시 ${minutes}분`;
        }
        

        async function reload() {
            
        }

        // function reloadDivArea() {
        // $('#weather').load(location.href+' #weather') 
        // timereset();
        // }; // 새로고침
    </script>

</body>

</html>